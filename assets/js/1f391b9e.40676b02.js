"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6061],{7973:(e,t,r)=>{r.r(t),r.d(t,{default:()=>u});r(6540);var i=r(4164),s=r(1213),n=r(7559),a=r(7776),l=r(7910),c=r(7763),o=r(6896),d=r(2153);const p={mdxPageWrapper:"mdxPageWrapper_j9I6"};var h=r(4848);function u(e){const{content:t}=e,{metadata:r,assets:u}=t,{title:x,editUrl:m,description:g,frontMatter:j,lastUpdatedBy:f,lastUpdatedAt:U}=r,{keywords:w,wrapperClassName:b,hide_table_of_contents:v}=j,y=u.image??j.image,_=!!(m||U||f);return(0,h.jsx)(s.e3,{className:(0,i.A)(b??n.G.wrapper.mdxPages,n.G.page.mdxPage),children:(0,h.jsxs)(a.A,{children:[(0,h.jsx)(s.be,{title:x,description:g,keywords:w,image:y}),(0,h.jsx)("main",{className:"container container--fluid margin-vert--lg",children:(0,h.jsxs)("div",{className:(0,i.A)("row",p.mdxPageWrapper),children:[(0,h.jsxs)("div",{className:(0,i.A)("col",!v&&"col--8"),children:[(0,h.jsx)(o.A,{metadata:r}),(0,h.jsx)("article",{children:(0,h.jsx)(l.A,{children:(0,h.jsx)(t,{})})}),_&&(0,h.jsx)(d.A,{className:(0,i.A)("margin-top--sm",n.G.pages.pageFooterEditMetaRow),editUrl:m,lastUpdatedAt:U,lastUpdatedBy:f})]}),!v&&t.toc.length>0&&(0,h.jsx)("div",{className:"col col--2",children:(0,h.jsx)(c.A,{toc:t.toc,minHeadingLevel:j.toc_min_heading_level,maxHeadingLevel:j.toc_max_heading_level})})]})})]})})}},6368:(e,t,r)=>{r.d(t,{A:()=>h});var i=r(6540),s=r(7303),n=r(5556),a=r.n(n),l=r(4848);const c=e=>{let{githubUrl:t}=e;const[r,s]=(0,i.useState)([]),[n,a]=(0,i.useState)(null);return(0,i.useEffect)((()=>{const e=(e=>{try{const t=new URL(e),[,r,i,,s,...n]=t.pathname.split("/");return{apiUrl:`https://api.github.com/repos/${r}/${i}/contents/${n.join("/")}?ref=${s}`,repoUrl:e}}catch(n){return console.error("Invalid GitHub URL:",e),null}})(t);if(!e||!e.apiUrl)return void a("Invalid GitHub URL");(async()=>{try{const t=await fetch(e.apiUrl);if(!t.ok)throw new Error(`Failed to fetch files: ${t.statusText}`);const r=await t.json();s(r)}catch(t){a(t.message)}})()}),[t]),n?(0,l.jsxs)("p",{children:["Error: ",n]}):r.length?(0,l.jsxs)("div",{children:[(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:r.map((e=>"dir"===e.type?`${e.name}/`:e.name)).join("\n")})}),(0,l.jsx)("p",{children:(0,l.jsx)("a",{href:t,target:"_blank",rel:"noopener noreferrer",children:"link to source"})})]}):(0,l.jsx)("p",{children:"Loading directory listing..."})};c.propTypes={githubUrl:a().string.isRequired};const o=c,d=e=>{let{githubFileUrl:t}=e;const[r,s]=(0,i.useState)(""),[n,a]=(0,i.useState)(null);return(0,i.useEffect)((()=>{const e=(e=>{try{const t=new URL(e),[,r,i,,s,...n]=t.pathname.split("/");return{apiUrl:`https://raw.githubusercontent.com/${r}/${i}/${s}/${n.join("/")}`,repoUrl:e}}catch(n){return console.error("Invalid GitHub File URL:",e),null}})(t);if(!e||!e.apiUrl)return void a("Invalid GitHub File URL");(async()=>{try{const t=await fetch(e.apiUrl);if(!t.ok)throw new Error(`Failed to fetch file content: ${t.statusText}`);const r=await t.text();s(r)}catch(t){a(t.message)}})()}),[t]),n?(0,l.jsxs)("p",{children:["Error: ",n]}):r?(0,l.jsxs)("div",{children:[(0,l.jsx)("pre",{children:(0,l.jsx)("code",{children:r})}),(0,l.jsx)("p",{children:(0,l.jsx)("a",{href:t,target:"_blank",rel:"noopener noreferrer",children:"link to source"})})]}):(0,l.jsx)("p",{children:"Loading file content..."})};d.propTypes={githubFileUrl:a().string.isRequired};const p=d,h={...s.A,GitHubDirectoryList:o,GitHubFileViewer:p}}}]);