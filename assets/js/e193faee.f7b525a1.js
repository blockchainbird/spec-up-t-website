"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[52],{493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var r=n(4848),s=n(8453);const i={sidebar_position:6},c=void 0,o={id:"guide/external-term-references",title:"external-term-references",description:"External Term References",source:"@site/docs/guide/external-term-references.md",sourceDirName:"guide",slug:"/guide/external-term-references",permalink:"/spec-up-t-website/docs/guide/external-term-references",draft:!1,unlisted:!1,editUrl:"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/guide/external-term-references.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"term-references",permalink:"/spec-up-t-website/docs/guide/term-references"},next:{title:"Short History",permalink:"/spec-up-t-website/docs/category/short-history"}},l={},a=[{value:"External Term References",id:"external-term-references",level:3}];function d(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"external-term-references",children:"External Term References"}),"\n",(0,r.jsxs)(t.p,{children:["It is possible to include references to terms from external spec-up generated specifications. To include a source you would like to pull references from include an ",(0,r.jsx)(t.code,{children:"external_specs"})," array in your spec config. The value should be a key/value object where the key is used in the external reference below and the value is the URL of the external spec."]}),"\n",(0,r.jsx)(t.p,{children:"::: example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "specs": [\n    {\n      ...\n      "external_specs": [\n        {"PE": "https://identity.foundation/presentation-exchange"}\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:":::"}),"\n",(0,r.jsxs)(t.p,{children:["To include an external term reference within your spec use the following format ",(0,r.jsx)(t.code,{children:"[[xref: {title}, {term}]]"})," where ",(0,r.jsx)(t.code,{children:"{title}"})," is the title given to the spec in the config and ",(0,r.jsx)(t.code,{children:"{term}"})," is the term being used. For example using the PE spec given in the example above [[xref: PE, Holder]]"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);