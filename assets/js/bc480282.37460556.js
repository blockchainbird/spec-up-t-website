"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7826],{2957:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var n=r(4848),s=r(8453);const o={sidebar_position:3},i="External Term References",c={id:"Roles/terminology-authors-guide/external-term-references",title:"External Term References",description:"It is possible to include references to terms from external spec-up generated specifications. To include a source you would like to pull references from include an external_specs array in your spec config. The value should be a key/value object where the key is used in the external reference below and the value is the URL of the external spec.",source:"@site/docs/Roles/terminology-authors-guide/external-term-references.md",sourceDirName:"Roles/terminology-authors-guide",slug:"/Roles/terminology-authors-guide/external-term-references",permalink:"/spec-up-t-website/docs/Roles/terminology-authors-guide/external-term-references",draft:!1,unlisted:!1,editUrl:"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/Roles/terminology-authors-guide/external-term-references.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Term References",permalink:"/spec-up-t-website/docs/Roles/terminology-authors-guide/term-references"},next:{title:"Curators Guide",permalink:"/spec-up-t-website/docs/category/curators-guide"}},l={},a=[];function u(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"external-term-references",children:"External Term References"}),"\n",(0,n.jsxs)(t.p,{children:["It is possible to include references to terms from external spec-up generated specifications. To include a source you would like to pull references from include an ",(0,n.jsx)(t.code,{children:"external_specs"})," array in your spec config. The value should be a key/value object where the key is used in the external reference below and the value is the URL of the external spec."]}),"\n",(0,n.jsx)(t.p,{children:"::: example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "specs": [\n    {\n      ...\n      "external_specs": [\n        {"test-1": "https://kordwarshuis.github.io/spec-up-xref-test-1/"}\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:":::"}),"\n",(0,n.jsxs)(t.p,{children:["To include an external term reference within your spec use the following format ",(0,n.jsx)(t.code,{children:"[[xref: {title}, {term}]]"})," where ",(0,n.jsx)(t.code,{children:"{title}"})," is the title given to the spec in the config and ",(0,n.jsx)(t.code,{children:"{term}"})," is the term being used. For example using the PE spec given in the example above [[xref: test-1, AAL]]"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var n=r(6540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);