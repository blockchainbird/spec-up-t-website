"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4789],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},54255:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"various-roles/admins-guide/introduction","title":"Intro","description":"An Admin role is a supporting role in Spec-Up-T.","source":"@site/docs/various-roles/admins-guide/introduction.md","sourceDirName":"various-roles/admins-guide","slug":"/various-roles/admins-guide/introduction","permalink":"/spec-up-t-website/docs/various-roles/admins-guide/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/various-roles/admins-guide/introduction.md","tags":[],"version":"current","lastUpdatedAt":1750358097000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Admins Guide","permalink":"/spec-up-t-website/docs/category/admins-guide"},"next":{"title":"Content Authors Guide","permalink":"/spec-up-t-website/docs/category/content-authors-guide"}}');var s=i(74848),o=i(28453);const r={sidebar_position:1},l="Intro",a={},d=[{value:"Use cases",id:"use-cases",level:2},{value:"Solutions",id:"solutions",level:2},{value:"Add 1. Convenience tool splitting a file into atomic single definition files",id:"add-1-convenience-tool-splitting-a-file-into-atomic-single-definition-files",level:3},{value:"Add 2 and 3. Updates",id:"add-2-and-3-updates",level:3},{value:"Add 4. Languages",id:"add-4-languages",level:3},{value:"Data",id:"data",level:4},{value:"Functionality",id:"functionality",level:4},{value:"Add 5. Migration",id:"add-5-migration",level:3},{value:"Merge specs.json",id:"merge-specsjson",level:4},{value:"A. Fresh install",id:"a-fresh-install",level:4},{value:"B. Overwrite and clean up",id:"b-overwrite-and-clean-up",level:4}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"intro",children:"Intro"})}),"\n",(0,s.jsx)(n.p,{children:"An Admin role is a supporting role in Spec-Up-T."}),"\n",(0,s.jsx)(n.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The Admin splits a terminology file that contains multiple definition in spec-up syntax (mostly originated from a terminology editor) into single definition files in the right subdirectory of the terms-definition directory."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The Admin updates the ",(0,s.jsx)(n.strong,{children:"npm package called Spec-Up-T"}),". This is relevant when modules are depreciated or new modules offer crucial features."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The Admin update its ",(0,s.jsx)(n.strong,{children:"own installation"}),", which he installed with the installer, using the Spec-Up-T npm package."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Not yet operational!"})," The Admin adds a new language subdirectory to terms-definition directory and specifies the right API calls to chatGPT for a language and/or user-level translation from the source terms definition."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The Admin migrates a legacy Spec-Up (DIF) to the latest Spec-Up-T. He/she removes the obsolete files that Spec-Up has by hand."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"solutions",children:"Solutions"}),"\n",(0,s.jsx)(n.h3,{id:"add-1-convenience-tool-splitting-a-file-into-atomic-single-definition-files",children:"Add 1. Convenience tool splitting a file into atomic single definition files"}),"\n",(0,s.jsxs)(n.p,{children:["The input of a ",(0,s.jsx)(n.a,{href:"../../advanced-features/splitter.md",children:"Splitter tool"})," is a markdown file with multiple spec-up definition, references, and external references."]}),"\n",(0,s.jsx)(n.p,{children:"You can do the splitting operation by hand, the splitter tool is just a convenience tool for large glossaries."}),"\n",(0,s.jsx)(n.h3,{id:"add-2-and-3-updates",children:"Add 2 and 3. Updates"}),"\n",(0,s.jsxs)(n.p,{children:["Use case 2, ",(0,s.jsx)(n.a,{href:"/spec-up-t-website/docs/administrative-and-maintenance-tasks/updating",children:"update Spec-Up-T"}),", has to be followed by Use cases 3: ",(0,s.jsx)(n.a,{href:"/spec-up-t-website/docs/administrative-and-maintenance-tasks/updating",children:"Update own installation"})," (ToDo: add anchor links)"]}),"\n",(0,s.jsx)(n.h3,{id:"add-4-languages",children:"Add 4. Languages"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Not yet operational!"})," However, The design is:"]}),"\n",(0,s.jsx)(n.h4,{id:"data",children:"Data"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Not yet operational!"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"one reference source language, which is English for example"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"the most comprehensive definition of concept covered by a term"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["it matches the Spec-Up-T directory structure: atomic definitions in markdown files with spec-up syntax under a ",(0,s.jsx)(n.code,{children:"terms-definition"})," folder in the ",(0,s.jsx)(n.code,{children:"spec"})," folder."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["per language-userlevel an extra subdirectory with this naming convention:\n",(0,s.jsx)(n.em,{children:"languagecode-LVL1"}),", ",(0,s.jsx)(n.em,{children:"languagecode-LVL2"}),", ..., ",(0,s.jsx)(n.em,{children:"languagecode-LVLn"})]}),"\n",(0,s.jsx)(n.p,{children:"Since the reference source-files are LVLn, where n is the most comprehensive description."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"functionality",children:"Functionality"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Not yet operational!"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AI will convert the reference source data and export the resulting files into directories named in this convention:"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"languagecode-LVLx"})}),"\n",(0,s.jsx)(n.p,{children:"For example:\nEN is the reference language and we have one other language (Dutch) and two user levels in total."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"terms-definition"})," folder contains:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"files that have the characteristics: English, user level 2."}),"\n",(0,s.jsx)(n.li,{children:"subdirectories EN-LVL1, NL-LVL1, NL-LVL2"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"An essential feature of this AI conversion is the linking back to the original source in the generated content. So a Reader always has a reference back to the curated source in the original language. Just imagine how important this is in legally enforced specifications: you don't want to be liable for over-simplified or incorrectly translated rules and regulations."}),"\n",(0,s.jsx)(n.h3,{id:"add-5-migration",children:"Add 5. Migration"}),"\n",(0,s.jsx)(n.p,{children:"Preparation:"}),"\n",(0,s.jsx)(n.p,{children:"Go to the repo to be migrated on your local machine and Fetch the legacy Spec-Up install from github production server."}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cd my-legacy-spec-up-repo\ngit fetch upstream\n"})}),"\n",(0,s.jsx)(n.h4,{id:"merge-specsjson",children:"Merge specs.json"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"new-dir"})," copy ",(0,s.jsx)(n.code,{children:"specs.json"})," to ",(0,s.jsx)(n.code,{children:"specs.json-default"}),".\nCopy the legacy  ",(0,s.jsx)(n.code,{children:"specs.json"})," into ",(0,s.jsx)(n.code,{children:"new-dir"})," under a new name: ",(0,s.jsx)(n.code,{children:"specs.json-legacy"}),"\nOpen both the legacy ",(0,s.jsx)(n.code,{children:"specs.json-legacy"})," and ",(0,s.jsx)(n.code,{children:"specs.json"})," Copy these attributes over from the legacy file into ",(0,s.jsx)(n.code,{children:"specs.json"})," ",(0,s.jsx)(n.strong,{children:"where the values are different"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:'language-"title":',children:'            "spec_directory":\n            "output_path": \n            "markdown_paths": [\n                   | all the files listed here |\n            ],\n            "logo": \n            "logo_link": \n            "katex": \n            "source": {\n                "host": \n                "account": \n                "repo": \n'})}),"\n",(0,s.jsx)(n.p,{children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'            "title": "Key Event Receipt Infrastructure",\n            "spec_directory": "./spec",\n            "output_path": "./docs",\n            "markdown_paths": [\n                   spec.md\n            ],\n            "logo": "https://raw.githubusercontent.com/trustoverip/logo-assets/master/logos/ToIP-Logo-Color-SolidDimensional-Horizontal-LightOnDark.svg",\n            "logo_link": "https://github.com/trustoverip/tswg-keri-specification",\n            "katex": true,\n            "source": {\n                "host": "github",\n                "account": "trustoverip",\n                "repo": "tswg-keri-specification"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now we can distinguish two approaches:"}),"\n",(0,s.jsx)(n.p,{children:"A. Start a clean Spec-Up-T install and copy content files over from the legacy Spec-Up install"}),"\n",(0,s.jsx)(n.p,{children:"B. Run Spec-Up-T updates over the legacy Spec-Up repo and clean obsolete files by hand"}),"\n",(0,s.jsx)(n.h4,{id:"a-fresh-install",children:"A. Fresh install"}),"\n",(0,s.jsx)(n.p,{children:"BEWARE: THIS RESULTS IN UNRELATED GIT HISTORIES!"}),"\n",(0,s.jsxs)(n.p,{children:["Perform a local spec-up-t install via ",(0,s.jsx)(n.code,{children:"npx create-spec-up-t new-dir"})]}),"\n",(0,s.jsxs)(n.p,{children:["Remove the instructive and placeholder .md files from the ",(0,s.jsx)(n.code,{children:"spec"})," directory:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"example-markup-in-markdown.md"}),"\n",(0,s.jsx)(n.li,{children:"intro.md"}),"\n",(0,s.jsx)(n.li,{children:"outro.md"}),"\n",(0,s.jsx)(n.li,{children:"terms-and-definitions-intro.md"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Empty the ",(0,s.jsx)(n.code,{children:"terms-definitions"})," folder"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"remove term-1.md, term-2.md, term-3.md, term-4.md"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Copy the content of the legacy Spec-Up install in the spec folder, leave the ",(0,s.jsx)(n.code,{children:"terms-definitions"})," folder empty, then run the ",(0,s.jsx)(n.a,{href:"https://trustoverip.github.io/spec-up-t-website/docs/various-roles/admins-guide/tools#splitter-tool",children:"split tool"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Now you should be up & running to test this repo, back-up the legacy Spec-Up repo to a new name and rename the Spec-Up-T ",(0,s.jsx)(n.code,{children:"new-dir"})," to the name of formerly legacy Spec-Up folder."]}),"\n",(0,s.jsxs)(n.p,{children:["You should be able to commit the changes and figure out how to deal with the ",(0,s.jsx)(n.em,{children:"unrelated"})," histories on the github remote repository."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Interesting use case: when legacy install uses local images -> beware!\nSuspect that the src of those images will be a full url to the repo."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"b-overwrite-and-clean-up",children:"B. Overwrite and clean up"}),"\n",(0,s.jsx)(n.p,{children:"Via this approach we keep the git history of the legacy Spec-Up install available after the Spec-Up-T migration."}),"\n",(0,s.jsxs)(n.p,{children:["Follow use case 2. and 3. Use case 2, ",(0,s.jsx)(n.a,{href:"/spec-up-t-website/docs/administrative-and-maintenance-tasks/updating#updating-the-npm-package-called-spec-up-t",children:"update Spec-Up-T"}),", has to be followed by Use cases 3: ",(0,s.jsx)(n.a,{href:"/spec-up-t-website/docs/administrative-and-maintenance-tasks/updating#updating-your-installation",children:"Update own installation"})]}),"\n",(0,s.jsx)(n.p,{children:"And then remove obsolete files and directories (ToDo: add link to list) by hand. This is difficult because you don't know by definition what dirs and files have been put in."}),"\n",(0,s.jsx)(n.p,{children:"| @Kor : could you provide a list of legacy Spec-Up files and directories that we nominate to remove? |"}),"\n",(0,s.jsx)(n.p,{children:"So again., be aware during a migration that extra content may have been added by users. Always back-up before migration. Better safe than sorry."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);