"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5755],{3121:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"developer-documentation/markdown-it-info","title":"Markdown-it Architecture and Implementation Guide","description":"This inventory was generated by Copilot\'s \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human.","source":"@site/docs/developer-documentation/markdown-it-info.md","sourceDirName":"developer-documentation","slug":"/developer-documentation/markdown-it-info","permalink":"/spec-up-t-website/docs/developer-documentation/markdown-it-info","draft":false,"unlisted":false,"editUrl":"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/developer-documentation/markdown-it-info.md","tags":[],"version":"current","lastUpdatedBy":"Kor Dwarshuis","lastUpdatedAt":1751574570000,"sidebarPosition":100,"frontMatter":{"sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Markdown-it Code","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-build/markdown-it-documentation"},"next":{"title":"TREF vs XREF","permalink":"/spec-up-t-website/docs/developer-documentation/difference-xref-tref"}}');var s=i(74848),r=i(28453);const l={sidebar_position:100},o="Markdown-it Architecture and Implementation Guide",a={},c=[{value:"Executive Summary",id:"executive-summary",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"System Design Principles",id:"system-design-principles",level:3},{value:"Technology Stack",id:"technology-stack",level:3},{value:"Core Processing Pipeline",id:"core-processing-pipeline",level:2},{value:"Processing Phases",id:"processing-phases",level:3},{value:"Token-Based Processing Model",id:"token-based-processing-model",level:2},{value:"Token Architecture",id:"token-architecture",level:3},{value:"Token Structure",id:"token-structure",level:4},{value:"Token Lifecycle",id:"token-lifecycle",level:4},{value:"Custom Token Types",id:"custom-token-types",level:3},{value:"Implementation Components",id:"implementation-components",level:2},{value:"1. Main Processing Engine (<code>/index.js</code>)",id:"1-main-processing-engine-indexjs",level:3},{value:"Key Responsibilities",id:"key-responsibilities",level:4},{value:"Plugin Integration",id:"plugin-integration",level:4},{value:"2. Custom Extensions (<code>/src/markdown-it-extensions.js</code>)",id:"2-custom-extensions-srcmarkdown-it-extensionsjs",level:3},{value:"Template System Implementation",id:"template-system-implementation",level:4},{value:"Bootstrap Table Enhancement",id:"bootstrap-table-enhancement",level:4},{value:"3. Client-Side Configuration (<code>/assets/js/declare-markdown-it.js</code>)",id:"3-client-side-configuration-assetsjsdeclare-markdown-itjs",level:3},{value:"Use Cases",id:"use-cases",level:4},{value:"Custom Extensions",id:"custom-extensions",level:2},{value:"Template System",id:"template-system",level:3},{value:"Supported Template Types",id:"supported-template-types",level:4},{value:"Template Processing Algorithm",id:"template-processing-algorithm",level:4},{value:"Definition List Enhancement",id:"definition-list-enhancement",level:3},{value:"Challenges Addressed",id:"challenges-addressed",level:4},{value:"Implementation Strategy",id:"implementation-strategy",level:4},{value:"Escape Mechanism",id:"escape-mechanism",level:3},{value:"Three-Phase Processing",id:"three-phase-processing",level:4},{value:"Implementation",id:"implementation",level:4},{value:"Advanced Template System",id:"advanced-template-system",level:2},{value:"Design Philosophy",id:"design-philosophy",level:3},{value:"Template Processor Architecture",id:"template-processor-architecture",level:3},{value:"Advanced Template Features",id:"advanced-template-features",level:3},{value:"Multi-argument Support",id:"multi-argument-support",level:4},{value:"Conditional Rendering",id:"conditional-rendering",level:4},{value:"Client-Side Integration",id:"client-side-integration",level:2},{value:"Browser Environment",id:"browser-environment",level:3},{value:"Key Features",id:"key-features",level:4},{value:"Usage Patterns",id:"usage-patterns",level:4},{value:"Integration with External Systems",id:"integration-with-external-systems",level:3},{value:"Performance and Optimization",id:"performance-and-optimization",level:2},{value:"Processing Efficiency",id:"processing-efficiency",level:3},{value:"Token Processing Optimization",id:"token-processing-optimization",level:4},{value:"Memory Management",id:"memory-management",level:4},{value:"Caching Strategies",id:"caching-strategies",level:3},{value:"External Reference Caching",id:"external-reference-caching",level:4},{value:"Build Optimization",id:"build-optimization",level:4},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Code Quality Standards",id:"code-quality-standards",level:3},{value:"SonarQube Compliance",id:"sonarqube-compliance",level:4},{value:"Implementation Patterns",id:"implementation-patterns",level:4},{value:"Testing Strategy",id:"testing-strategy",level:3},{value:"Unit Testing",id:"unit-testing",level:4},{value:"Integration Testing",id:"integration-testing",level:4},{value:"Documentation Standards",id:"documentation-standards",level:3},{value:"Code Documentation",id:"code-documentation",level:4},{value:"Troubleshooting and Debugging",id:"troubleshooting-and-debugging",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Template Processing Failures",id:"template-processing-failures",level:4},{value:"Definition List Structure Issues",id:"definition-list-structure-issues",level:4},{value:"Development Tools",id:"development-tools",level:3},{value:"Token Inspection",id:"token-inspection",level:4},{value:"Performance Profiling",id:"performance-profiling",level:4},{value:"Error Handling Patterns",id:"error-handling-patterns",level:3},{value:"Graceful Degradation",id:"graceful-degradation",level:4},{value:"Validation Frameworks",id:"validation-frameworks",level:4},{value:"File Dependencies and Integration",id:"file-dependencies-and-integration",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:3},{value:"Integration Points",id:"integration-points",level:3},{value:"Build System Integration",id:"build-system-integration",level:4},{value:"External System Dependencies",id:"external-system-dependencies",level:4},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"markdown-it-architecture-and-implementation-guide",children:"Markdown-it Architecture and Implementation Guide"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"This inventory was generated by Copilot's \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human."})}),"\n",(0,s.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,s.jsx)(n.p,{children:"This document provides a comprehensive technical reference for the markdown-it implementation in Spec-Up-T, a specialized static site generator for technical specifications. The implementation extends the standard markdown-it parser with sophisticated custom plugins, template systems, and processing pipelines designed specifically for technical documentation authoring."}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#architecture-overview",children:"Architecture Overview"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#core-processing-pipeline",children:"Core Processing Pipeline"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#token-based-processing-model",children:"Token-Based Processing Model"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#implementation-components",children:"Implementation Components"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#custom-extensions",children:"Custom Extensions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#template-system",children:"Template System"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#client-side-integration",children:"Client-Side Integration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#performance-and-optimization",children:"Performance and Optimization"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#development-guidelines",children:"Development Guidelines"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#troubleshooting-and-debugging",children:"Troubleshooting and Debugging"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,s.jsx)(n.h3,{id:"system-design-principles",children:"System Design Principles"}),"\n",(0,s.jsx)(n.p,{children:"The Spec-Up-T markdown-it implementation follows a modular, extensible architecture designed around the following principles:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Separation of Concerns"}),": Distinct phases for parsing, processing, and rendering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token-Based Processing"}),": All transformations operate on markdown-it's token model"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensibility"}),": Plugin-based architecture for adding custom functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance"}),": Efficient processing with minimal computational overhead"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reliability"}),": Robust error handling and graceful degradation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core Parser"}),": markdown-it v13.x with CommonMark compliance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Runtime Environment"}),": Node.js (server-side) and modern browsers (client-side)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom Extensions"}),": Native JavaScript plugins following markdown-it patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Third-Party Plugins"}),": Curated ecosystem plugins for enhanced functionality"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"core-processing-pipeline",children:"Core Processing Pipeline"}),"\n",(0,s.jsx)(n.p,{children:"The markdown-to-HTML transformation follows a sophisticated multi-stage pipeline:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Markdown      \u2502    \u2502   Escape         \u2502    \u2502   Custom        \u2502\n\u2502   Input Files   \u2502\u2500\u2500\u2500\u25b6\u2502   Handling       \u2502\u2500\u2500\u2500\u25b6\u2502   Replacers     \u2502\n\u2502                 \u2502    \u2502   (Phase 1)      \u2502    \u2502   (Phase 2)     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u25bc\n\u2502   HTML Output   \u2502    \u2502   Post-          \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Generation    \u2502\u25c0\u2500\u2500\u2500\u2502   Processing     \u2502\u25c0\u2500\u2500\u2500\u2502   markdown-it   \u2502\n\u2502                 \u2502    \u2502   (Phase 5)      \u2502    \u2502   Parsing       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   (Phase 3)     \u2502\n                                \u2502               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u25bc                        \u2502\n                       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u25bc\n                       \u2502   Definition     \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                       \u2502   List Repair    \u2502\u25c0\u2500\u2500\u2500\u2502   Plugin        \u2502\n                       \u2502   (Phase 4)      \u2502    \u2502   Processing    \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   (Phase 3.5)   \u2502\n                                               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"processing-phases",children:"Processing Phases"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pre-processing Phase"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Escape sequence conversion (",(0,s.jsx)(n.code,{children:"\\[[tag]]"})," \u2192 placeholders)"]}),"\n",(0,s.jsxs)(n.li,{children:["File inclusion processing (",(0,s.jsx)(n.code,{children:"[[insert:file.txt]]"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Custom replacer application"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parsing Phase"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"markdown-it tokenization"}),"\n",(0,s.jsx)(n.li,{children:"Token tree construction"}),"\n",(0,s.jsx)(n.li,{children:"Syntax validation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Plugin Processing Phase"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Custom template parsing"}),"\n",(0,s.jsx)(n.li,{children:"Table enhancement"}),"\n",(0,s.jsx)(n.li,{children:"Link processing"}),"\n",(0,s.jsx)(n.li,{children:"Definition list analysis"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Rendering Phase"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Token-to-HTML conversion"}),"\n",(0,s.jsx)(n.li,{children:"Custom renderer application"}),"\n",(0,s.jsx)(n.li,{children:"Bootstrap integration"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Post-processing Phase"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Definition list structure repair"}),"\n",(0,s.jsx)(n.li,{children:"Term sorting"}),"\n",(0,s.jsx)(n.li,{children:"Escape sequence restoration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"token-based-processing-model",children:"Token-Based Processing Model"}),"\n",(0,s.jsx)(n.h3,{id:"token-architecture",children:"Token Architecture"}),"\n",(0,s.jsx)(n.p,{children:"markdown-it operates on a token-based model where markdown content is first parsed into an abstract syntax tree represented as tokens, then rendered to HTML. Understanding this model is crucial for effective customization."}),"\n",(0,s.jsx)(n.h4,{id:"token-structure",children:"Token Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"{\n  type: 'heading_open',           // Token type identifier\n  tag: 'h1',                      // HTML tag to generate\n  level: 1,                       // Nesting level in document\n  nesting: 1,                     // 1=opening, 0=self-closing, -1=closing\n  content: '',                    // Text content\n  info: '',                       // Additional metadata\n  attrs: [['id', 'section-1']],   // HTML attributes as [name, value] pairs\n  children: [],                   // Child tokens for container types\n  map: [0, 1],                    // Source line mapping\n  markup: '#'                     // Original markdown syntax\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"token-lifecycle",children:"Token Lifecycle"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Creation"}),": Tokens are created during the parsing phase by core rules and plugins"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modification"}),": Plugins can modify existing tokens or inject new ones"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rendering"}),": Each token type has an associated renderer that converts it to HTML"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Assembly"}),": Final HTML is assembled from individual token renderings"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-token-types",children:"Custom Token Types"}),"\n",(0,s.jsx)(n.p,{children:"Spec-Up-T introduces several custom token types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"template"}),": Handles ",(0,s.jsx)(n.code,{children:"[[tag:args]]"})," syntax"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"transcluded_term"}),": Manages external term references"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"enhanced_table"}),": Bootstrap-enhanced table tokens"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-components",children:"Implementation Components"}),"\n",(0,s.jsxs)(n.h3,{id:"1-main-processing-engine-indexjs",children:["1. Main Processing Engine (",(0,s.jsx)(n.code,{children:"/index.js"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"The primary markdown-it instance is configured with comprehensive plugin integration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const md = require('markdown-it')({\n  html: true,        // Preserve raw HTML in markdown\n  linkify: true,     // Auto-detect and linkify URLs\n  typographer: true  // Smart typography (quotes, dashes, etc.)\n})\n"})}),"\n",(0,s.jsx)(n.h4,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration Management"}),": Centralized plugin configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rendering Orchestration"}),": Main render function coordination"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Template Processing"}),": Custom replacer system implementation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),": Comprehensive error capture and reporting"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"plugin-integration",children:"Plugin Integration"}),"\n",(0,s.jsx)(n.p,{children:"The main instance integrates 15+ specialized plugins:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markdown-it-attrs"}),": HTML attribute syntax (",(0,s.jsx)(n.code,{children:"{.class #id}"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markdown-it-deflist"}),": Definition list support for terminology"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markdown-it-katex"}),": Mathematical notation rendering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markdown-it-prism"}),": Syntax highlighting with Prism.js"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"markdown-it-toc-and-anchor"}),": Automated table of contents"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom extensions"}),": Spec-Up-T specific functionality"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"2-custom-extensions-srcmarkdown-it-extensionsjs",children:["2. Custom Extensions (",(0,s.jsx)(n.code,{children:"/src/markdown-it-extensions.js"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"Provides specialized markdown-it plugins for technical specification authoring:"}),"\n",(0,s.jsx)(n.h4,{id:"template-system-implementation",children:"Template System Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"md.inline.ruler.after('emphasis', 'templates', function(state, silent) {\n  // Template detection and token creation\n  const openMarker = state.src.indexOf('[[', state.pos);\n  const closeMarker = state.src.indexOf(']]', openMarker + 2);\n  \n  if (openMarker !== state.pos || closeMarker === -1) {\n    return false;\n  }\n  \n  const token = state.push('template', '', 0);\n  token.content = content;\n  token.info = { type, args, template };\n  \n  state.pos = closeMarker + 2;\n  return true;\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"bootstrap-table-enhancement",children:"Bootstrap Table Enhancement"}),"\n",(0,s.jsx)(n.p,{children:"Automatically enhances all tables with responsive Bootstrap styling:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"md.renderer.rules.table_open = function(tokens, idx, options, env, self) {\n  const token = tokens[idx];\n  const classIndex = token.attrIndex('class');\n  \n  if (classIndex < 0) {\n    token.attrPush(['class', 'table table-striped table-bordered']);\n  } else {\n    token.attrs[classIndex][1] += ' table table-striped table-bordered';\n  }\n  \n  return '<div class=\"table-responsive-md\">' + originalRender(tokens, idx, options, env, self);\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"3-client-side-configuration-assetsjsdeclare-markdown-itjs",children:["3. Client-Side Configuration (",(0,s.jsx)(n.code,{children:"/assets/js/declare-markdown-it.js"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"Provides a simplified markdown-it instance for browser-based processing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const md = window.markdownit({\n   html: true,        // Allow raw HTML preservation\n   linkify: true,     // URL auto-detection\n   typographer: true  // Smart typography\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Content Processing"}),": External term definition rendering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Preview"}),": Live markdown editing features"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Progressive Enhancement"}),": Client-side content augmentation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"custom-extensions",children:"Custom Extensions"}),"\n",(0,s.jsx)(n.h3,{id:"template-system",children:"Template System"}),"\n",(0,s.jsxs)(n.p,{children:["The template system provides a powerful mechanism for embedding dynamic content within markdown documents using a consistent ",(0,s.jsx)(n.code,{children:"[[tag:args]]"})," syntax."]}),"\n",(0,s.jsx)(n.h4,{id:"supported-template-types",children:"Supported Template Types"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Template"}),(0,s.jsx)(n.th,{children:"Syntax"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Output"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"def"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[def:term1,term2]]"})}),(0,s.jsx)(n.td,{children:"Define terminology"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'<dt id="term:term1">term1</dt>'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"ref"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[ref:term]]"})}),(0,s.jsx)(n.td,{children:"Reference local term"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'<a href="#term:term">term</a>'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"xref"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[xref:spec,term]]"})}),(0,s.jsx)(n.td,{children:"External specification reference"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'<a href="spec.html#term">term</a>'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"tref"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[tref:spec,term]]"})}),(0,s.jsx)(n.td,{children:"Transcluded external term"}),(0,s.jsx)(n.td,{children:"Full term definition"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"spec"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[spec:RFC7515]]"})}),(0,s.jsx)(n.td,{children:"Specification citation"}),(0,s.jsx)(n.td,{children:"Formatted specification link"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"insert"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[[insert:file.txt]]"})}),(0,s.jsx)(n.td,{children:"File inclusion"}),(0,s.jsx)(n.td,{children:"File content insertion"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"template-processing-algorithm",children:"Template Processing Algorithm"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pattern Detection"}),": Regex-based identification of template markers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content Extraction"}),": Parse template type and arguments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Processor Resolution"}),": Match against registered template processors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token Creation"}),": Generate appropriate tokens for rendering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rendering"}),": Convert tokens to final HTML output"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"definition-list-enhancement",children:"Definition List Enhancement"}),"\n",(0,s.jsx)(n.p,{children:"Technical specifications rely heavily on terminology definitions. The system provides sophisticated definition list processing:"}),"\n",(0,s.jsx)(n.h4,{id:"challenges-addressed",children:"Challenges Addressed"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Empty Element Handling"}),": Automatic removal of broken ",(0,s.jsx)(n.code,{children:"<dt></dt>"})," elements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structure Repair"}),": Merging fragmented definition lists"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Visual Grouping"}),": CSS class injection for styling consistency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transcluded Integration"}),": Seamless external term integration"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-strategy",children:"Implementation Strategy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function fixDefinitionListStructure(html) {\n  const dom = new JSDOM(html);\n  const mainDl = dom.window.document.querySelector('.terms-and-definitions-list');\n  \n  let currentNode = mainDl.nextSibling;\n  while (currentNode) {\n    if (currentNode.nodeName === 'DL') {\n      // Merge additional definition lists\n      while (currentNode.firstChild) {\n        mainDl.appendChild(currentNode.firstChild);\n      }\n      const nextNode = currentNode.nextSibling;\n      currentNode.remove();\n      currentNode = nextNode;\n    } else if (currentNode.nodeName === 'DT') {\n      // Move orphaned definition terms\n      mainDl.appendChild(currentNode);\n      currentNode = currentNode.nextSibling;\n    } else {\n      currentNode = currentNode.nextSibling;\n    }\n  }\n  \n  return dom.serialize();\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"escape-mechanism",children:"Escape Mechanism"}),"\n",(0,s.jsx)(n.p,{children:"Provides literal rendering of template syntax when needed:"}),"\n",(0,s.jsx)(n.h4,{id:"three-phase-processing",children:"Three-Phase Processing"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pre-processing"}),": Convert ",(0,s.jsx)(n.code,{children:"\\[[tag]]"})," to unique placeholders"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Standard Processing"}),": Apply normal template processing (placeholders ignored)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Post-processing"}),": Restore placeholders as literal ",(0,s.jsx)(n.code,{children:"[[tag]]"})," text"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const ESCAPED_PLACEHOLDER = '___ESCAPED_TEMPLATE___';\n\nfunction processEscapedTags(content) {\n  return content.replace(/\\\\(\\[\\[[^\\]]+\\]\\])/g, \n    (match, template) => `${ESCAPED_PLACEHOLDER}${template}${ESCAPED_PLACEHOLDER}`);\n}\n\nfunction restoreEscapedTags(content) {\n  return content.replace(\n    new RegExp(`${ESCAPED_PLACEHOLDER}([^${ESCAPED_PLACEHOLDER}]+)${ESCAPED_PLACEHOLDER}`, 'g'),\n    '$1'\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-template-system",children:"Advanced Template System"}),"\n",(0,s.jsx)(n.h3,{id:"design-philosophy",children:"Design Philosophy"}),"\n",(0,s.jsx)(n.p,{children:"The template system is designed around the following principles:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intuitive Syntax"}),": Clear, memorable template patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Semantic Clarity"}),": Template names reflect their function"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensibility"}),": Easy addition of new template types"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Resilience"}),": Graceful handling of malformed templates"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"template-processor-architecture",children:"Template Processor Architecture"}),"\n",(0,s.jsx)(n.p,{children:"Each template type is implemented as a processor object:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const templateProcessor = {\n  test: 'ref',  // Template type identifier\n  filter: type => type === 'ref',  // Matching function\n  transform: function(originalMatch, type, ...args) {\n    // Transformation logic\n    return `<a href=\"#term:${args[0]}\">${args[0]}</a>`;\n  }\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"advanced-template-features",children:"Advanced Template Features"}),"\n",(0,s.jsx)(n.h4,{id:"multi-argument-support",children:"Multi-argument Support"}),"\n",(0,s.jsx)(n.p,{children:"Templates can accept multiple comma-separated arguments:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"[[def:JSON Web Token,JWT,token]]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Results in multiple definition anchors for the same term."}),"\n",(0,s.jsx)(n.h4,{id:"conditional-rendering",children:"Conditional Rendering"}),"\n",(0,s.jsx)(n.p,{children:"Templates can include conditional logic based on context:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"transform: function(match, type, spec, term) {\n  if (externalSpecs.has(spec)) {\n    return renderExternalReference(spec, term);\n  } else {\n    return renderMissingReference(spec, term);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"client-side-integration",children:"Client-Side Integration"}),"\n",(0,s.jsx)(n.h3,{id:"browser-environment",children:"Browser Environment"}),"\n",(0,s.jsx)(n.p,{children:"The client-side markdown-it instance provides essential functionality for dynamic content processing in the browser environment."}),"\n",(0,s.jsx)(n.h4,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Simplified Configuration"}),": Core features without complex server-side extensions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Optimized"}),": Minimal bundle size for fast loading"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Progressive Enhancement"}),": Augments server-rendered content"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Process external term definitions\nfunction processExternalTerm(markdownContent) {\n  const cleanContent = markdownContent.replace(/\\[\\[def:[^\\]]+\\]\\]/g, '');\n  return md.render(cleanContent);\n}\n\n// Dynamic content insertion\nfunction insertDynamicContent(elementId, markdownSource) {\n  const htmlContent = md.render(markdownSource);\n  document.getElementById(elementId).innerHTML = htmlContent;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-external-systems",children:"Integration with External Systems"}),"\n",(0,s.jsx)(n.p,{children:"The client-side implementation facilitates integration with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub API"}),": Fetching external specification content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CDN Resources"}),": Loading remote term definitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Updates"}),": Live content synchronization"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-and-optimization",children:"Performance and Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"processing-efficiency",children:"Processing Efficiency"}),"\n",(0,s.jsx)(n.h4,{id:"token-processing-optimization",children:"Token Processing Optimization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimal Tree Traversal"}),": Efficient algorithms for token manipulation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cached Computations"}),": Expensive operations cached across renders"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lazy Evaluation"}),": Deferred processing of optional features"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Efficient token processing\nfunction processTokens(tokens) {\n  const results = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === 'template') {\n      results.push(processTemplate(token));\n    } else {\n      results.push(token);\n    }\n  }\n  return results;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies"}),"\n",(0,s.jsx)(n.h4,{id:"external-reference-caching",children:"External Reference Caching"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local Storage"}),": Browser-based caching for external terms"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"File System Caching"}),": Server-side cache for external specifications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intelligent Invalidation"}),": Cache refresh based on content changes"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"build-optimization",children:"Build Optimization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Asset Compilation"}),": Pre-compiled templates for production"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bundle Splitting"}),": Separate bundles for core and extended functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minification"}),": Optimized JavaScript delivery"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,s.jsx)(n.h3,{id:"code-quality-standards",children:"Code Quality Standards"}),"\n",(0,s.jsx)(n.h4,{id:"sonarqube-compliance",children:"SonarQube Compliance"}),"\n",(0,s.jsx)(n.p,{children:"All markdown-it related code must meet the following standards:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cognitive Complexity"}),": Maximum complexity of 15 per function"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code Coverage"}),": Minimum 80% test coverage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability"}),": Clear separation of concerns and modular design"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"implementation-patterns",children:"Implementation Patterns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Good: Low cognitive complexity\nfunction processSimpleTemplate(token) {\n  const { type, args } = token.info;\n  return templateProcessors[type]?.transform(...args) || token.content;\n}\n\n// Avoid: High cognitive complexity\nfunction processComplexTemplate(token) {\n  // Multiple nested conditions and complex logic\n  if (token.info.type === 'ref') {\n    if (args.length > 1) {\n      if (externalSpecs.has(args[0])) {\n        // ... complex nested logic\n      }\n    }\n  }\n  // ... continues with high complexity\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,s.jsx)(n.h4,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Template Processors"}),": Individual template type testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token Manipulation"}),": Verification of token transformations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edge Cases"}),": Malformed input handling"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"End-to-End Processing"}),": Complete pipeline validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Plugin Interaction"}),": Multi-plugin compatibility testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Testing"}),": Processing time benchmarks"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"documentation-standards",children:"Documentation Standards"}),"\n",(0,s.jsx)(n.h4,{id:"code-documentation",children:"Code Documentation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"/**\n * Processes template tokens and converts them to HTML\n * \n * @param {Object} token - markdown-it token object\n * @param {string} token.type - Token type identifier\n * @param {Object} token.info - Template metadata\n * @param {string} token.info.type - Template type (ref, def, etc.)\n * @param {Array<string>} token.info.args - Template arguments\n * @returns {string} Generated HTML content\n * \n * @example\n * // Process a reference template\n * const token = { \n *   type: 'template', \n *   info: { type: 'ref', args: ['example-term'] } \n * };\n * const html = processTemplate(token);\n * // Returns: '<a href=\"#term:example-term\">example-term</a>'\n */\nfunction processTemplate(token) {\n  // Implementation\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting-and-debugging",children:"Troubleshooting and Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.h4,{id:"template-processing-failures",children:"Template Processing Failures"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Symptom"}),": Templates render as literal text instead of processed HTML"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Diagnosis"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Debug template detection\nconsole.log('Template tokens:', tokens.filter(t => t.type === 'template'));\n\n// Verify processor registration\nconsole.log('Available processors:', Object.keys(templateProcessors));\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify template syntax matches expected patterns"}),"\n",(0,s.jsx)(n.li,{children:"Check processor registration order"}),"\n",(0,s.jsx)(n.li,{children:"Validate argument parsing logic"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"definition-list-structure-issues",children:"Definition List Structure Issues"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Symptom"}),": Broken or fragmented definition lists"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Diagnosis"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Debug definition list structure\nfunction debugDefinitionLists(html) {\n  const dom = new JSDOM(html);\n  const dlElements = dom.window.document.querySelectorAll('dl');\n  console.log('Found definition lists:', dlElements.length);\n  dlElements.forEach((dl, index) => {\n    console.log(`DL ${index}:`, dl.children.length, 'children');\n  });\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure transcluded terms are properly formatted"}),"\n",(0,s.jsx)(n.li,{children:"Verify definition list repair function execution"}),"\n",(0,s.jsx)(n.li,{children:"Check for conflicting CSS that might affect layout"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development-tools",children:"Development Tools"}),"\n",(0,s.jsx)(n.h4,{id:"token-inspection",children:"Token Inspection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Add to markdown-it configuration for debugging\nmd.renderer.rules.template = function(tokens, idx, options, env, renderer) {\n  const token = tokens[idx];\n  console.log('Rendering template token:', {\n    type: token.info.type,\n    args: token.info.args,\n    content: token.content\n  });\n  \n  // Continue with normal rendering\n  return processTemplate(token);\n};\n"})}),"\n",(0,s.jsx)(n.h4,{id:"performance-profiling",children:"Performance Profiling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Performance monitoring wrapper\nfunction withPerformanceMonitoring(fn, name) {\n  return function(...args) {\n    const start = performance.now();\n    const result = fn.apply(this, args);\n    const duration = performance.now() - start;\n    console.log(`${name} took ${duration.toFixed(2)}ms`);\n    return result;\n  };\n}\n\n// Apply to critical functions\nconst monitoredRender = withPerformanceMonitoring(md.render, 'markdown-it render');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling-patterns",children:"Error Handling Patterns"}),"\n",(0,s.jsx)(n.h4,{id:"graceful-degradation",children:"Graceful Degradation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function safeTemplateProcess(template, fallback) {\n  try {\n    return processTemplate(template);\n  } catch (error) {\n    console.warn(`Template processing failed: ${error.message}`);\n    return fallback || template.content;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"validation-frameworks",children:"Validation Frameworks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function validateTemplateStructure(content) {\n  const templates = content.match(/\\[\\[([^:\\]]+):?([^\\]]*)\\]\\]/g) || [];\n  const errors = [];\n  \n  templates.forEach(template => {\n    const match = template.match(/\\[\\[([^:\\]]+):?([^\\]]*)\\]\\]/);\n    if (!match) {\n      errors.push(`Malformed template: ${template}`);\n      return;\n    }\n    \n    const [, type, args] = match;\n    if (!templateProcessors[type]) {\n      errors.push(`Unknown template type: ${type}`);\n    }\n  });\n  \n  return { valid: errors.length === 0, errors };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"file-dependencies-and-integration",children:"File Dependencies and Integration"}),"\n",(0,s.jsx)(n.h3,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                        Spec-Up-T System                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  index.js (Main Engine)                                        \u2502\n\u2502  \u251c\u2500\u2500 markdown-it core configuration                            \u2502\n\u2502  \u251c\u2500\u2500 Plugin integration and management                         \u2502\n\u2502  \u251c\u2500\u2500 Custom replacer system                                    \u2502\n\u2502  \u2514\u2500\u2500 Main rendering pipeline                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  src/markdown-it-extensions.js (Custom Plugins)                \u2502\n\u2502  \u251c\u2500\u2500 Template system implementation                            \u2502\n\u2502  \u251c\u2500\u2500 Bootstrap table enhancement                               \u2502\n\u2502  \u251c\u2500\u2500 Definition list processing                                \u2502\n\u2502  \u2514\u2500\u2500 Token manipulation utilities                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  assets/js/declare-markdown-it.js (Client-side)                \u2502\n\u2502  \u251c\u2500\u2500 Browser markdown-it instance                              \u2502\n\u2502  \u251c\u2500\u2500 External content processing                               \u2502\n\u2502  \u2514\u2500\u2500 Dynamic content integration                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Supporting Systems                                             \u2502\n\u2502  \u251c\u2500\u2500 src/escape-handler.js (Escape mechanism)                  \u2502\n\u2502  \u251c\u2500\u2500 gulpfile.js (Build system integration)                    \u2502\n\u2502  \u251c\u2500\u2500 config/asset-map.json (Asset management)                  \u2502\n\u2502  \u2514\u2500\u2500 Third-party plugins (Extended functionality)              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-points",children:"Integration Points"}),"\n",(0,s.jsx)(n.h4,{id:"build-system-integration",children:"Build System Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// config/asset-map.json\n{\n  "markdown-it": {\n    "js": [\n      "/node_modules/markdown-it/dist/markdown-it.min.js",\n      "/assets/js/declare-markdown-it.js"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"external-system-dependencies",children:"External System Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub API"}),": External specification fetching"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"File System"}),": Local file inclusion processing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cache System"}),": Performance optimization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Template Engine"}),": HTML generation framework"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"The markdown-it implementation in Spec-Up-T represents a sophisticated approach to technical documentation processing. By leveraging markdown-it's extensible architecture and implementing custom plugins, the system provides powerful authoring capabilities while maintaining performance and reliability."}),"\n",(0,s.jsx)(n.p,{children:"The token-based processing model enables precise control over content transformation, while the template system provides an intuitive interface for authors. The combination of server-side processing power and client-side dynamic capabilities creates a flexible, scalable solution for complex technical documentation requirements."}),"\n",(0,s.jsx)(n.p,{children:"This documentation serves as both a reference for understanding the current implementation and a guide for future enhancements and maintenance activities."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Document Version"}),": 2.0",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Last Updated"}),": July 2025",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Maintained By"}),": Spec-Up-T Development Team"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);